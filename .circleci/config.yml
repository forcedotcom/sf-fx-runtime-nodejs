---
version: 2.1

orbs:
  node: circleci/node@4.7
  win: circleci/windows@2.2.0

commands:
  install-openjdk:
    description: "A command to install the openjdk. See https://circleci.com/developer/orbs/orb/cloudesire/openjdk-install."
    parameters:
      version:
        type: integer
        default: 8
      cache_version:
        type: integer
        default: 1
    steps:
      - run:
          name: Add openjdk-r PPA
          command: |
            killall -9 apt-get || true
            sed -i 's/\/\/archive.ubuntu.com/\/\/us.archive.ubuntu.com/g' /etc/apt/sources.list
            apt-get install -y software-properties-common
            add-apt-repository ppa:openjdk-r/ppa
            apt-get update
      - run:
          name: Generate cache version
          command: |
            apt-cache policy openjdk-<< parameters.version >>-jdk | grep 'Candidate:' | cut -d ' ' -f4 > .openjdk_version
            cat .openjdk_version
      - restore_cache:
          keys:
          - apt-cache-{{ checksum ".openjdk_version" }}-v<< parameters.cache_version >>
      - run:
          name: Restore apt cache
          command: |
            mkdir -p /tmp/archives
            rsync -av /tmp/archives/ /var/cache/apt/archives/
      - run:
          name: Install openjdk-<< parameters.version >>-jdk
          command: |
            apt-get install -y openjdk-<< parameters.version >>-jdk
            update-java-alternatives --set java-1.<< parameters.version >>.0-openjdk-amd64
      - run:
          name: Prepare to save apt cache
          command: rsync -av /var/cache/apt/archives/*.deb /tmp/archives/
      - save_cache:
          key: apt-cache-{{ checksum ".openjdk_version" }}-v<< parameters.cache_version >>
          paths:
          - /tmp/archives

jobs:
  node-17: &test
    docker:
      - image: node:17
    steps:
      # openjdk required for testing with wiremock
      - install-openjdk
      - checkout
      - node/install-packages
      - run:
          name: Run format check
          command: npm run format:check
      - run:
          name: Run linter
          command: npm run lint
      - run:
          name: Run unit tests
          command: npm run test
      - run:
          name: Run build
          command: npm run build
  node-16:
    <<: *test
    docker:
      - image: node:16
  node-14:
    <<: *test
    docker:
      - image: node:14
  windows:
    executor:
      name: win/default
      shell: powershell.exe
    steps:
      - checkout
      - run: systeminfo
      - run:
          name: node info
          shell: powershell.exe
          command: |
            node --version
            npm --version
      - run:
          name: Install dependencies
          shell: powershell.exe
          command: npm ci
      - run:
          name: Run unit tests
          shell: powershell.exe
          command: npm run test

workflows:
  check-and-build:
    jobs:
      - node-17
      - node-16
      - node-14
      - windows
